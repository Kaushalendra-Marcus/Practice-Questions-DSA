// Find Largest and Smallest Number in an Array using Function


#include<iostream>
using namespace std;

//Funtion for minimum number

int getMin(int num[], int n){
               int min = INT_MAX;
               for(int i=0;i<n;i++){
                if(num[i]<min){
                        min=num[i];
                }
               } 
        return min;

        }

// Funtion for maximum number
        
int getMax(int num[], int n){
               int max = INT_MIN;
               for(int i=0;i<n;i++){
                if(num[i]>max){
                        max=num[i];
                }
               } 
        return max;

        }


int main (){
        int size;
        cout<<"Enter the size of array :"<<endl;
        cin>>size;
        int num[1000];

        for(int i=0;i<size;i++){
                cin>>num[i];
        }
        cout<<"Maximum value is: "<<getMax(num, size)<<endl;
        cout<<"Minimum value is: "<<getMin(num, size)<<endl;

        
        return 0;
}


-------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                   OR


#include<iostream>
using namespace std;

//Funtion for minimum number

int getMin(int num[], int n){
               int mini = INT_MAX;
               for(int i=0;i<n;i++){
                mini =min(mini,num[i]);
               } 
        return mini;

        }

// Funtion for maximum number

int getMax(int num[], int n){
               int maxi = INT_MIN;
               for(int i=0;i<n;i++){
                maxi=max(maxi,num[i]);
               } 
        return maxi;

        }


int main (){
        int size;
        cout<<"Enter the size of array :"<<endl;
        cin>>size;
        int num[1000];

        for(int i=0;i<size;i++){
                cin>>num[i];
        }
        cout<<"Maximum value is: "<<getMax(num, size)<<endl;
        cout<<"Minimum value is: "<<getMin(num, size)<<endl;

        
        return 0;
}
